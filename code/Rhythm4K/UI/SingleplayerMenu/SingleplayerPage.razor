@using System;
@using System.Collections.Generic;
@using Sandbox;
@using Sandbox.Menu;
@using Sandbox.UI;
@using Sandbox.UI.GameMenu;
@inherits Panel
@attribute [StyleSheet("/UI/LobbyMenu/LobbyMenuPage.razor.scss")]

@namespace Rhythm4K

<root class="lobby">
    <div class="body">
        <div class="left">
            <div class="navbar">
                <h2>Song Select</h2>
                <a class="button" href="/addons" >Load Addon</a>
            </div>
            @if(Rhythm4KSong.All.Count == 0)
            {
                <div class="no-songs">
                    No songs mounted! You likely need to load an addon :)
                </div>
            }
            else
            {
                <div class="songs">
                    @foreach (var item in Rhythm4KSong.All)
                    {
                        //<span class="button" onclick=@(() => { SongIdent = item.Ident; CurrentSong = item; })>@item.Name</span>
                        <LobbySongButton Song=@item onclick=@(() => SetSong(item) ) />
                    }
                </div>
            }
        </div>

        <div class="right">
            <div class="info">
                <h2>Song</h2>
                <LobbySongButton Song=@Song ></LobbySongButton>
                @if(Song != null)
                {
                    <h2>Difficulty</h2>
                    <div class="difficulties">
                        @if(Game.InGame || Game.Menu.Lobby.Owner.IsMe)
                        {
                            @for (int i=0; i<Song.Song.Charts.Count; i++)
                            {
                                <DifficultyButton Chart=@Song.Song.Charts[i] />
                            }
                        }
                    </div>
                }
            </div>
            <div class="buttons">
                <span class="button" onclick=@Settings>Settings</span>
            <span class="button start-game @CanPlay()" onclick=@StartGame>Start Game</span>
            </div>
        </div>
    </div>
</root>

@code
{

    public async void MountAddon(Package package)
    {
        await package.MountAsync(true);
    }
}


@code
{
    public static SingleplayerPage Current { get; set; }
    public Rhythm4KSong Song { get; set; }
    public int Difficulty { get; set; } = -1;

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        if(firstTime)
        {
            Current = this;
        }
    }

    protected void Settings()
    {
        this.Navigate("/settings");
    }

    protected void StartGame()
    {
        if(CanPlay() == "disabled") return;
        
        this.Navigate("/game");
        GamePage.Current?.LoadSong(Song, Difficulty);
    }

    public void SetSong(Rhythm4KSong song)
    {
        Difficulty = -1;
        Song = song;
    }

    public void SetDifficulty(int difficulty)
    {
        Difficulty = difficulty;
    }

    private string DifficultySelected(int difficulty)
    {
        if(Difficulty == difficulty) return "selected";
        return "";
    }

    private string CanPlay()
    {
        if(Song == null) return "disabled";
        if(Difficulty == -1) return "disabled";
        return "";
    }
}