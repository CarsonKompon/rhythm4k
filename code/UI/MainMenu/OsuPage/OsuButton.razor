@using System;
@using System.Collections.Generic;
@using System.Linq;
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.UI.GameMenu;
@inherits Panel
@attribute [StyleSheet]

@namespace Rhythm4K.Osu

<root onclick=@DownloadBeatmap class="@DownloadingClass()">
    <div class="background" />
    <span @ref="CoverImage" class="image">
		@if (Downloaded)
		{
			<span class="overlay downloaded">Downloaded <i>file_download</i></span>
		}
		else if(Downloading)
		{
			<span class="overlay downloading">Downloading <i>cached</i></span>
		}
	</span>
    <div class="info">
        <span class="title">@BeatmapSet.Title</span>
        <div class="sub">
            <span class="artist">@BeatmapSet.Artist</span>
            <span class="creator">@BeatmapSet.Creator</span>
        </div>
    </div>
</root>

@code
{
	public Panel CoverImage { get; set; }
	public OsuBeatmapSet BeatmapSet { get; set; }
	public bool Downloading { get; set; } = false;
	public bool Downloaded { get; set; } = false;
	public string CoverUrl { get; set; } = "";

	protected override void OnAfterTreeRender(bool firstTime)
	{
		base.OnAfterTreeRender(firstTime);

		if (firstTime)
		{
			if(BeatmapSet.Covers.TryGetValue("cover", out var coverImage))
			{
				CoverUrl = coverImage.ToString();
				CoverImage.Style.SetBackgroundImage(CoverUrl);
			}

			Downloaded = BeatmapSet.IsDownloaded();
		}
	}

    public override void Tick()
    {
        base.Tick();

        if(Downloading && BeatmapSet.IsDownloaded())
        {
            Downloading = false;
            Downloaded = true;
        }
    }

	public void DownloadBeatmap()
	{
		if(BeatmapSet.IsDownloaded())
		{
			return;
		}

        Downloading = true;

		SongDownloadPanel.Instance?.QueueDownload(BeatmapSet, CoverUrl);
	}

	public string DownloadingClass()
	{
		if (Downloading) return "no-hover";
		else return "";
	}

	protected override int BuildHash()
	{
		return HashCode.Combine(Downloaded, Downloading);
	}
	
}
